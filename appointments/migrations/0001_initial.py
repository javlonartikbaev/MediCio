# Generated by Django 5.0.4 on 2024-04-29 14:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_d', models.CharField(max_length=50)),
                ('last_name_d', models.CharField(max_length=50)),
                ('info_d', models.CharField(max_length=50)),
                ('img_doctor', models.ImageField(default='', upload_to='appointments/static/img/team')),
                ('doctor_slug', models.SlugField(default='', max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Доктор',
                'verbose_name_plural': 'Доктора',
                'db_table': 'doctors',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_p', models.CharField(max_length=50)),
                ('last_name_p', models.CharField(max_length=50)),
                ('date_of_birth', models.DateField()),
                ('phone_number_p', models.CharField(max_length=13)),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'db_table': 'patients',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_service', models.CharField(max_length=100)),
                ('service_slug', models.SlugField(default='', max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
                'db_table': 'services',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('status', models.CharField(choices=[('ожидание', 'Ожидание'), ('в процессе', 'В процессе'), ('отменено', 'Отменено')], default='ожидание', max_length=100)),
                ('doctor_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.doctors')),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.patient')),
            ],
            options={
                'verbose_name': 'Встреча',
                'verbose_name_plural': 'Встречи',
            },
        ),
        migrations.CreateModel(
            name='SubService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_subservice', models.CharField(max_length=100)),
                ('subservice_slug', models.SlugField(default='', max_length=255, unique=True)),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.service')),
            ],
            options={
                'verbose_name': 'Вспомогательный сервис',
                'verbose_name_plural': 'ВсВспомогательные сервисы',
                'db_table': 'subservices',
            },
        ),
        migrations.CreateModel(
            name='AppointmentService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.appointment')),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.service')),
                ('subservice_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.subservice')),
            ],
            options={
                'verbose_name': 'Выбранный сервис в записи',
                'verbose_name_plural': 'Выбранные сервисы в записи',
            },
        ),
    ]
